import { Context as TelegrafContext } from 'telegraf';
import { MessageEntity, Message } from 'typegram';
declare type ReplyToMessage = NonNullable<Message.CommonMessage['reply_to_message']>;
export declare type ReplyToMessageContext<Context extends TelegrafContext> = Context & {
    message: Message.CommonMessage & {
        reply_to_message: ReplyToMessage;
    };
};
export declare type UrlMessageEntity = Readonly<MessageEntity.TextLinkMessageEntity>;
export declare function isContextReplyToMessage<Context extends TelegrafContext>(context: Context): context is ReplyToMessageContext<Context>;
export declare function isReplyToQuestion<Context extends TelegrafContext>(context: ReplyToMessageContext<Context>, identifier: string): boolean;
export declare function getAdditionalState<Context extends TelegrafContext>(context: ReplyToMessageContext<Context>, identifier: string): string;
export declare function suffixMarkdown(identifier: string, additionalState: string | undefined): string;
export declare function suffixMarkdownV2(identifier: string, additionalState: string | undefined): string;
export declare function suffixHTML(identifier: string, additionalState: string | undefined): string;
export {};
